{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "demoName": {
      "type": "string",
      "defaultValue": "[concat('S2T', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Provide a unique name for the resources in this template."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Provide a location for the resources in this template."
      }
    },
    "sasExpiryDate": {
      "type": "string",
      "defaultValue": "2021-01-01T00:00:01Z",
      "metadata": {
        "description": "when deployed this template generates and store a sas token in appSettings to allow the Batch Transcription service to access audio blob files."
      }
    }
  },
  "variables": {
    "webStorageAccountName": "[toLower(if(greater(length(concat('webstore', parameters('demoName'))),23),substring(concat('webstore', parameters('demoName')),0,24),concat('webstore', parameters('demoName'))))]",
    "audioStorageAccountName": "[toLower(if(greater(length(concat('audiostore', parameters('demoName'))),23),substring(concat('audiostore', parameters('demoName')),0,24),concat('audiostore', parameters('demoName'))))]",
    "functionAppName": "[concat(parameters('demoName'), 'FuncApp')]",
    "hostingPlanName": "[concat(parameters('demoName'), 'ServicePlan')]",
    "functionStorageAccountName": "[toLower(if(greater(length(concat('funcstore', parameters('demoName'))),23),substring(concat('funcstore', parameters('demoName')),0,24),concat('funcstore', parameters('demoName'))))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('functionStorageAccountName'))]",
    "functionWorkerRuntime": "dotnet",
    "appInsightsName": "speechToTextDemoAppInsights",
    "cognititiveServiceName": "[concat(parameters('demoName'), 'SpeechServices')]",
    "eventSubName": "NewBlobEvent",
    "accountSasProperties": {
      "signedServices": "b",
      "signedPermission": "cr",
      "signedExpiry": "[parameters('sasExpiryDate')]",
      "signedResourceTypes": "sco"
    }
  },
  "resources": [
    {
      "name": "[variables('webStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "dependsOn": [],
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Storage account for web files"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "name": "[variables('AudioStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "dependsOn": [],
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Storage account for audio files"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
        {
          "name": "[concat(variables('AudioStorageAccountName'),'/default/','transcripts')]",
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-04-01",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('AudioStorageAccountName'))]",
            "[resourceId('Microsoft.Web/sites/config',variables('functionAppName'),'appSettings')]"
          ]
        },
        {
          "name": "[concat(variables('AudioStorageAccountName'),'/default/','audio')]",
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-04-01",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('AudioStorageAccountName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers',variables('AudioStorageAccountName'),'default','transcripts')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('functionStorageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "tags": {
        "displayName": "Storage account for functions content"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "properties":{
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/eventSubscriptions",
      "name": "[concat(variables('AudioStorageAccountName'), '/Microsoft.EventGrid/', variables('EventSubName'))]",
      "apiVersion": "2018-01-01",
      "tags": {
        "displayName": "EventGrid subscription - onblobcreated"
      },
      "dependsOn": [
        "[variables('AudioStorageAccountName')]",
        "getTriggerUrlLinkedTemplate",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers',variables('AudioStorageAccountName'),'default','audio')]"
      ],
      "properties": {
        "destination": {
          "endpointType": "WebHook",
          "properties": {
            "endpointUrl": "[concat('https://',variables('functionAppName'),'.azurewebsites.net/runtime/webhooks/EventGrid?functionName=','NewAudioFileEventGridTrigger','&code=',listkeys(concat(resourceId('Microsoft.Web/sites', variables('functionAppName')), '/host/default'), '2018-11-01').masterKey)]"
          }
        },
        "filter": {
          "subjectBeginsWith": "",
          "subjectEndsWith": "",
          "isSubjectCaseSensitive": false,
          "advancedFilters":[
            {
              "operatorType": "StringEndsWith",
              "key": "Subject",
              "values": [".wav", ".mp3", ".ogg"]
            }
          ],
          "includedEventTypes": [
            "Microsoft.Storage.BlobCreated"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "tags": {
        "displayName": "App Service Plan - Consumption"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2017-04-18",
      "name": "[variables('cognititiveServiceName')]",
      "dependsOn": [],
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Speech Service"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "properties": {}
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource",
        "displayName": "Application Insights"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('appInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "name": "[concat(variables('functionAppName'),'/appSettings')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "getTriggerUrlLinkedTemplate",
        "[variables('cognititiveServiceName')]"
      ],
      "tags": {
        "displayName": "WebAppSettings"
      },
      "properties": {
        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
        "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
        "FUNCTIONS_EXTENSION_VERSION": "~2",
        "WEBSITE_NODE_DEFAULT_VERSION": "8.11.1",
        "FUNCTIONS_WORKER_RUNTIME": "[variables('functionWorkerRuntime')]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]",
        "AzureWebJobsSecretStorageType": "files",
        "SubscriptionKey": "[listkeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognititiveServiceName')),'2017-04-18').key1]",
        "Region": "[parameters('location')]",
        "SASToken": "[concat('?',listAccountSas(variables('AudioStorageAccountName'), '2018-07-01', variables('accountSasProperties')).accountSasToken)]",
        "TranscriptStorageContainerUrl": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('audioStorageAccountName')), '2016-01-01').primaryEndpoints.blob,'transcripts')]",
        "CallbackFunctionUrl": "[reference('getTriggerUrlLinkedTemplate').outputs.triggerUrl.value]",
        "AddDiarization":"True"
      }
    },
    {
      "name": "registerCallbackLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getTriggerUrlLinkedTemplate",
        "[resourceId('Microsoft.Web/sites/config',variables('functionAppName'),'appSettings')]",
        "[resourceId('Microsoft.Storage/storageAccounts/providers/eventSubscriptions',variables('audioStorageAccountName'),'Microsoft.EventGrid',variables('eventSubName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(reference('getTriggerUrlLinkedTemplate').outputs.triggerUrl.value,'&Register=Yes')]",
          "contentVersion": "1.0.0.0"
        }
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "tags": {
        "displayName": "Function app"
      },
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsSecretStorageType",
              "value": "files"
            }
          ]
        }
      },
      "resources": []
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[concat(variables('functionAppName'),'/web')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "tags": {
        "displayName": "Bind function app to github repo"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
      ],
      "properties": {
        "RepoUrl": "https://github.com/timleyden/speechtotextdemo.git",
        "branch": "master",
        "IsManualIntegration": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "getTriggerUrlLinkedTemplate",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/sourcecontrols',variables('functionAppName'),'web')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(if(not(contains(deployment().properties,'templateLink')),'https://raw.githubusercontent.com/timleyden/speechtotextdemo/master/',deployment().properties.templateLink.uri), 'childTemplate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "webStorageAccountName": {"type":"string", "value":"[variables('webStorageAccountName')]"},
    "audioStorageAccountName": {"type":"string", "value":"[variables('audioStorageAccountName')]"},
    "appInsightsIKey": {"type":"string", "value":"[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"}
  }
}